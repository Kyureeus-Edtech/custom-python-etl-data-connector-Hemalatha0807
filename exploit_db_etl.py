import os
import io
import requests
import pandas as pd
from pymongo import MongoClient

# ---------------- CONFIGURATION ----------------
MONGO_URI = os.getenv("MONGO_URI", "mongodb://localhost:27017")
DB_NAME = os.getenv("DB_NAME", "threatintel")
COLLECTION_NAME = os.getenv("COLLECTION_NAME", "exploitdb_exploits")

# Updated public raw link for ExploitDB CSV
EXPLOITDB_URL = os.getenv(
    "EXPLOITDB_URL",
    "https://gitlab.com/exploit-database/exploitdb/-/raw/main/files_exploits.csv"
)

# ---------------- EXTRACT ----------------
def extract():
    """Extracts raw CSV data from ExploitDB feed."""
    print("[*] Extracting data from ExploitDB CSV feed...")

    headers = {
        "User-Agent": (
            "Mozilla/5.0 (Windows NT 10.0; Win64; x64) "
            "AppleWebKit/537.36 (KHTML, like Gecko) "
            "Chrome/115.0 Safari/537.36"
        )
    }

    resp = requests.get(EXPLOITDB_URL, headers=headers)
    resp.raise_for_status()
    return resp.text

# ---------------- TRANSFORM ----------------
def transform(csv_data):
    """Transforms CSV data into JSON for MongoDB."""
    print("[*] Transforming data...")
    df = pd.read_csv(io.StringIO(csv_data))  # FIXED: using io.StringIO
    records = df.to_dict(orient="records")
    return records

# ---------------- LOAD ----------------
def load(records):
    """Loads transformed data into MongoDB."""
    print("[*] Loading data into MongoDB...")
    client = MongoClient(MONGO_URI)
    db = client[DB_NAME]
    collection = db[COLLECTION_NAME]

    if records:
        collection.insert_many(records)
        print(f"[+] Inserted {len(records)} records into '{COLLECTION_NAME}' collection.")
    else:
        print("[!] No records to insert.")

# ---------------- MAIN ----------------
if __name__ == "__main__":
    try:
        csv_data = extract()
        records = transform(csv_data)
        load(records)
        print("[âœ”] ETL process completed successfully.")
    except requests.HTTPError as e:
        print(f"[ERROR] HTTP request failed: {e}")
    except Exception as e:
        print(f"[ERROR] {e}")
